{
  "version": 3,
  "sources": ["../../night-vision/dist/hammer-f752c1fe.js"],
  "sourcesContent": ["/* NightVisionCharts v0.3.3 | License: MIT\n Â© 2022 ChartMaster. All rights reserved */\nimport { g as getDefaultExportFromCjs } from \"./index-d313a23d.js\";\nfunction _mergeNamespaces(n, m) {\n  for (var i = 0; i < m.length; i++) {\n    const e = m[i];\n    if (typeof e !== \"string\" && !Array.isArray(e)) {\n      for (const k in e) {\n        if (k !== \"default\" && !(k in n)) {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          if (d) {\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: () => e[k]\n            });\n          }\n        }\n      }\n    }\n  }\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar hammer$2 = { exports: {} };\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(module) {\n  (function(window2, document2, exportName, undefined$1) {\n    var VENDOR_PREFIXES = [\"\", \"webkit\", \"Moz\", \"MS\", \"ms\", \"o\"];\n    var TEST_ELEMENT = document2.createElement(\"div\");\n    var TYPE_FUNCTION = \"function\";\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n    function setTimeoutContext(fn, timeout, context) {\n      return setTimeout(bindFn(fn, context), timeout);\n    }\n    function invokeArrayArg(arg, fn, context) {\n      if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n      }\n      return false;\n    }\n    function each(obj, iterator, context) {\n      var i;\n      if (!obj) {\n        return;\n      }\n      if (obj.forEach) {\n        obj.forEach(iterator, context);\n      } else if (obj.length !== undefined$1) {\n        i = 0;\n        while (i < obj.length) {\n          iterator.call(context, obj[i], i, obj);\n          i++;\n        }\n      } else {\n        for (i in obj) {\n          obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n      }\n    }\n    function deprecate(method, name, message) {\n      var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n      return function() {\n        var e = new Error(\"get-stack-trace\");\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, \"\").replace(/^\\s+at\\s+/gm, \"\").replace(/^Object.<anonymous>\\s*\\(/gm, \"{anonymous}()@\") : \"Unknown Stack Trace\";\n        var log = window2.console && (window2.console.warn || window2.console.log);\n        if (log) {\n          log.call(window2.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n      };\n    }\n    var assign;\n    if (typeof Object.assign !== \"function\") {\n      assign = function assign2(target) {\n        if (target === undefined$1 || target === null) {\n          throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined$1 && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    } else {\n      assign = Object.assign;\n    }\n    var extend = deprecate(function extend2(dest, src, merge2) {\n      var keys = Object.keys(src);\n      var i = 0;\n      while (i < keys.length) {\n        if (!merge2 || merge2 && dest[keys[i]] === undefined$1) {\n          dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n      }\n      return dest;\n    }, \"extend\", \"Use `assign`.\");\n    var merge = deprecate(function merge2(dest, src) {\n      return extend(dest, src, true);\n    }, \"merge\", \"Use `assign`.\");\n    function inherit(child, base, properties) {\n      var baseP = base.prototype, childP;\n      childP = child.prototype = Object.create(baseP);\n      childP.constructor = child;\n      childP._super = baseP;\n      if (properties) {\n        assign(childP, properties);\n      }\n    }\n    function bindFn(fn, context) {\n      return function boundFn() {\n        return fn.apply(context, arguments);\n      };\n    }\n    function boolOrFn(val, args) {\n      if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined$1 : undefined$1, args);\n      }\n      return val;\n    }\n    function ifUndefined(val1, val2) {\n      return val1 === undefined$1 ? val2 : val1;\n    }\n    function addEventListeners(target, types, handler) {\n      each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n      });\n    }\n    function removeEventListeners(target, types, handler) {\n      each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n      });\n    }\n    function hasParent(node, parent) {\n      while (node) {\n        if (node == parent) {\n          return true;\n        }\n        node = node.parentNode;\n      }\n      return false;\n    }\n    function inStr(str, find) {\n      return str.indexOf(find) > -1;\n    }\n    function splitStr(str) {\n      return str.trim().split(/\\s+/g);\n    }\n    function inArray(src, find, findByKey) {\n      if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n      } else {\n        var i = 0;\n        while (i < src.length) {\n          if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n            return i;\n          }\n          i++;\n        }\n        return -1;\n      }\n    }\n    function toArray(obj) {\n      return Array.prototype.slice.call(obj, 0);\n    }\n    function uniqueArray(src, key, sort) {\n      var results = [];\n      var values = [];\n      var i = 0;\n      while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n          results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n      }\n      if (sort) {\n        if (!key) {\n          results = results.sort();\n        } else {\n          results = results.sort(function sortUniqueArray(a, b) {\n            return a[key] > b[key];\n          });\n        }\n      }\n      return results;\n    }\n    function prefixed(obj, property) {\n      var prefix, prop;\n      var camelProp = property[0].toUpperCase() + property.slice(1);\n      var i = 0;\n      while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = prefix ? prefix + camelProp : property;\n        if (prop in obj) {\n          return prop;\n        }\n        i++;\n      }\n      return undefined$1;\n    }\n    var _uniqueId = 1;\n    function uniqueId() {\n      return _uniqueId++;\n    }\n    function getWindowForElement(element) {\n      var doc = element.ownerDocument || element;\n      return doc.defaultView || doc.parentWindow || window2;\n    }\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n    var SUPPORT_TOUCH = \"ontouchstart\" in window2;\n    var SUPPORT_POINTER_EVENTS = prefixed(window2, \"PointerEvent\") !== undefined$1;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n    var INPUT_TYPE_TOUCH = \"touch\";\n    var INPUT_TYPE_PEN = \"pen\";\n    var INPUT_TYPE_MOUSE = \"mouse\";\n    var INPUT_TYPE_KINECT = \"kinect\";\n    var COMPUTE_INTERVAL = 25;\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n    var PROPS_XY = [\"x\", \"y\"];\n    var PROPS_CLIENT_XY = [\"clientX\", \"clientY\"];\n    function Input(manager, callback) {\n      var self2 = this;\n      this.manager = manager;\n      this.callback = callback;\n      this.element = manager.element;\n      this.target = manager.options.inputTarget;\n      this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n          self2.handler(ev);\n        }\n      };\n      this.init();\n    }\n    Input.prototype = {\n      /**\n       * should handle the inputEvent data and trigger the callback\n       * @virtual\n       */\n      handler: function() {\n      },\n      /**\n       * bind the events\n       */\n      init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      },\n      /**\n       * unbind the events\n       */\n      destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n      }\n    };\n    function createInputInstance(manager) {\n      var Type;\n      var inputClass = manager.options.inputClass;\n      if (inputClass) {\n        Type = inputClass;\n      } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n      } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n      } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n      } else {\n        Type = TouchMouseInput;\n      }\n      return new Type(manager, inputHandler);\n    }\n    function inputHandler(manager, eventType, input) {\n      var pointersLen = input.pointers.length;\n      var changedPointersLen = input.changedPointers.length;\n      var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n      var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n      input.isFirst = !!isFirst;\n      input.isFinal = !!isFinal;\n      if (isFirst) {\n        manager.session = {};\n      }\n      input.eventType = eventType;\n      computeInputData(manager, input);\n      manager.emit(\"hammer.input\", input);\n      manager.recognize(input);\n      manager.session.prevInput = input;\n    }\n    function computeInputData(manager, input) {\n      var session = manager.session;\n      var pointers = input.pointers;\n      var pointersLength = pointers.length;\n      if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n      }\n      if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n      } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n      }\n      var firstInput = session.firstInput;\n      var firstMultiple = session.firstMultiple;\n      var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n      var center = input.center = getCenter(pointers);\n      input.timeStamp = now();\n      input.deltaTime = input.timeStamp - firstInput.timeStamp;\n      input.angle = getAngle(offsetCenter, center);\n      input.distance = getDistance(offsetCenter, center);\n      computeDeltaXY(session, input);\n      input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n      var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n      input.overallVelocityX = overallVelocity.x;\n      input.overallVelocityY = overallVelocity.y;\n      input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n      input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n      input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n      input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n      computeIntervalInputData(session, input);\n      var target = manager.element;\n      if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n      }\n      input.target = target;\n    }\n    function computeDeltaXY(session, input) {\n      var center = input.center;\n      var offset = session.offsetDelta || {};\n      var prevDelta = session.prevDelta || {};\n      var prevInput = session.prevInput || {};\n      if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n          x: prevInput.deltaX || 0,\n          y: prevInput.deltaY || 0\n        };\n        offset = session.offsetDelta = {\n          x: center.x,\n          y: center.y\n        };\n      }\n      input.deltaX = prevDelta.x + (center.x - offset.x);\n      input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n    function computeIntervalInputData(session, input) {\n      var last = session.lastInterval || input, deltaTime = input.timeStamp - last.timeStamp, velocity, velocityX, velocityY, direction;\n      if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined$1)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n        session.lastInterval = input;\n      } else {\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n      }\n      input.velocity = velocity;\n      input.velocityX = velocityX;\n      input.velocityY = velocityY;\n      input.direction = direction;\n    }\n    function simpleCloneInputData(input) {\n      var pointers = [];\n      var i = 0;\n      while (i < input.pointers.length) {\n        pointers[i] = {\n          clientX: round(input.pointers[i].clientX),\n          clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n      }\n      return {\n        timeStamp: now(),\n        pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n      };\n    }\n    function getCenter(pointers) {\n      var pointersLength = pointers.length;\n      if (pointersLength === 1) {\n        return {\n          x: round(pointers[0].clientX),\n          y: round(pointers[0].clientY)\n        };\n      }\n      var x = 0, y = 0, i = 0;\n      while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n      }\n      return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n      };\n    }\n    function getVelocity(deltaTime, x, y) {\n      return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n      };\n    }\n    function getDirection(x, y) {\n      if (x === y) {\n        return DIRECTION_NONE;\n      }\n      if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n      }\n      return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n    function getDistance(p1, p2, props) {\n      if (!props) {\n        props = PROPS_XY;\n      }\n      var x = p2[props[0]] - p1[props[0]], y = p2[props[1]] - p1[props[1]];\n      return Math.sqrt(x * x + y * y);\n    }\n    function getAngle(p1, p2, props) {\n      if (!props) {\n        props = PROPS_XY;\n      }\n      var x = p2[props[0]] - p1[props[0]], y = p2[props[1]] - p1[props[1]];\n      return Math.atan2(y, x) * 180 / Math.PI;\n    }\n    function getRotation(start, end) {\n      return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n    function getScale(start, end) {\n      return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n    var MOUSE_INPUT_MAP = {\n      mousedown: INPUT_START,\n      mousemove: INPUT_MOVE,\n      mouseup: INPUT_END\n    };\n    var MOUSE_ELEMENT_EVENTS = \"mousedown\";\n    var MOUSE_WINDOW_EVENTS = \"mousemove mouseup\";\n    function MouseInput() {\n      this.evEl = MOUSE_ELEMENT_EVENTS;\n      this.evWin = MOUSE_WINDOW_EVENTS;\n      this.pressed = false;\n      Input.apply(this, arguments);\n    }\n    inherit(MouseInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n        if (eventType & INPUT_START && ev.button === 0) {\n          this.pressed = true;\n        }\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n          eventType = INPUT_END;\n        }\n        if (!this.pressed) {\n          return;\n        }\n        if (eventType & INPUT_END) {\n          this.pressed = false;\n        }\n        this.callback(this.manager, eventType, {\n          pointers: [ev],\n          changedPointers: [ev],\n          pointerType: INPUT_TYPE_MOUSE,\n          srcEvent: ev\n        });\n      }\n    });\n    var POINTER_INPUT_MAP = {\n      pointerdown: INPUT_START,\n      pointermove: INPUT_MOVE,\n      pointerup: INPUT_END,\n      pointercancel: INPUT_CANCEL,\n      pointerout: INPUT_CANCEL\n    };\n    var IE10_POINTER_TYPE_ENUM = {\n      2: INPUT_TYPE_TOUCH,\n      3: INPUT_TYPE_PEN,\n      4: INPUT_TYPE_MOUSE,\n      5: INPUT_TYPE_KINECT\n      // see https://twitter.com/jacobrossi/status/480596438489890816\n    };\n    var POINTER_ELEMENT_EVENTS = \"pointerdown\";\n    var POINTER_WINDOW_EVENTS = \"pointermove pointerup pointercancel\";\n    if (window2.MSPointerEvent && !window2.PointerEvent) {\n      POINTER_ELEMENT_EVENTS = \"MSPointerDown\";\n      POINTER_WINDOW_EVENTS = \"MSPointerMove MSPointerUp MSPointerCancel\";\n    }\n    function PointerEventInput() {\n      this.evEl = POINTER_ELEMENT_EVENTS;\n      this.evWin = POINTER_WINDOW_EVENTS;\n      Input.apply(this, arguments);\n      this.store = this.manager.session.pointerEvents = [];\n    }\n    inherit(PointerEventInput, Input, {\n      /**\n       * handle mouse events\n       * @param {Object} ev\n       */\n      handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n        var eventTypeNormalized = ev.type.toLowerCase().replace(\"ms\", \"\");\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n        var isTouch = pointerType == INPUT_TYPE_TOUCH;\n        var storeIndex = inArray(store, ev.pointerId, \"pointerId\");\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n          if (storeIndex < 0) {\n            store.push(ev);\n            storeIndex = store.length - 1;\n          }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n          removePointer = true;\n        }\n        if (storeIndex < 0) {\n          return;\n        }\n        store[storeIndex] = ev;\n        this.callback(this.manager, eventType, {\n          pointers: store,\n          changedPointers: [ev],\n          pointerType,\n          srcEvent: ev\n        });\n        if (removePointer) {\n          store.splice(storeIndex, 1);\n        }\n      }\n    });\n    var SINGLE_TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n    };\n    var SINGLE_TOUCH_TARGET_EVENTS = \"touchstart\";\n    var SINGLE_TOUCH_WINDOW_EVENTS = \"touchstart touchmove touchend touchcancel\";\n    function SingleTouchInput() {\n      this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n      this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n      this.started = false;\n      Input.apply(this, arguments);\n    }\n    inherit(SingleTouchInput, Input, {\n      handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n        if (type === INPUT_START) {\n          this.started = true;\n        }\n        if (!this.started) {\n          return;\n        }\n        var touches = normalizeSingleTouches.call(this, ev, type);\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n          this.started = false;\n        }\n        this.callback(this.manager, type, {\n          pointers: touches[0],\n          changedPointers: touches[1],\n          pointerType: INPUT_TYPE_TOUCH,\n          srcEvent: ev\n        });\n      }\n    });\n    function normalizeSingleTouches(ev, type) {\n      var all = toArray(ev.touches);\n      var changed = toArray(ev.changedTouches);\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), \"identifier\", true);\n      }\n      return [all, changed];\n    }\n    var TOUCH_INPUT_MAP = {\n      touchstart: INPUT_START,\n      touchmove: INPUT_MOVE,\n      touchend: INPUT_END,\n      touchcancel: INPUT_CANCEL\n    };\n    var TOUCH_TARGET_EVENTS = \"touchstart touchmove touchend touchcancel\";\n    function TouchInput() {\n      this.evTarget = TOUCH_TARGET_EVENTS;\n      this.targetIds = {};\n      Input.apply(this, arguments);\n    }\n    inherit(TouchInput, Input, {\n      handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n          return;\n        }\n        this.callback(this.manager, type, {\n          pointers: touches[0],\n          changedPointers: touches[1],\n          pointerType: INPUT_TYPE_TOUCH,\n          srcEvent: ev\n        });\n      }\n    });\n    function getTouches(ev, type) {\n      var allTouches = toArray(ev.touches);\n      var targetIds = this.targetIds;\n      if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n      }\n      var i, targetTouches, changedTouches = toArray(ev.changedTouches), changedTargetTouches = [], target = this.target;\n      targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n      });\n      if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n          targetIds[targetTouches[i].identifier] = true;\n          i++;\n        }\n      }\n      i = 0;\n      while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n          changedTargetTouches.push(changedTouches[i]);\n        }\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n          delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n      }\n      if (!changedTargetTouches.length) {\n        return;\n      }\n      return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), \"identifier\", true),\n        changedTargetTouches\n      ];\n    }\n    var DEDUP_TIMEOUT = 2500;\n    var DEDUP_DISTANCE = 25;\n    function TouchMouseInput() {\n      Input.apply(this, arguments);\n      var handler = bindFn(this.handler, this);\n      this.touch = new TouchInput(this.manager, handler);\n      this.mouse = new MouseInput(this.manager, handler);\n      this.primaryTouch = null;\n      this.lastTouches = [];\n    }\n    inherit(TouchMouseInput, Input, {\n      /**\n       * handle mouse and touch events\n       * @param {Hammer} manager\n       * @param {String} inputEvent\n       * @param {Object} inputData\n       */\n      handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH, isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        }\n        if (isTouch) {\n          recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n          return;\n        }\n        this.callback(manager, inputEvent, inputData);\n      },\n      /**\n       * remove the event listeners\n       */\n      destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n      }\n    });\n    function recordTouches(eventType, eventData) {\n      if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n      }\n    }\n    function setLastTouch(eventData) {\n      var touch = eventData.changedPointers[0];\n      if (touch.identifier === this.primaryTouch) {\n        var lastTouch = { x: touch.clientX, y: touch.clientY };\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n          var i = lts.indexOf(lastTouch);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n      }\n    }\n    function isSyntheticEvent(eventData) {\n      var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n      for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, \"touchAction\");\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined$1;\n    var TOUCH_ACTION_COMPUTE = \"compute\";\n    var TOUCH_ACTION_AUTO = \"auto\";\n    var TOUCH_ACTION_MANIPULATION = \"manipulation\";\n    var TOUCH_ACTION_NONE = \"none\";\n    var TOUCH_ACTION_PAN_X = \"pan-x\";\n    var TOUCH_ACTION_PAN_Y = \"pan-y\";\n    var TOUCH_ACTION_MAP = getTouchActionProps();\n    function TouchAction(manager, value) {\n      this.manager = manager;\n      this.set(value);\n    }\n    TouchAction.prototype = {\n      /**\n       * set the touchAction value on the element or enable the polyfill\n       * @param {String} value\n       */\n      set: function(value) {\n        if (value == TOUCH_ACTION_COMPUTE) {\n          value = this.compute();\n        }\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n          this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n      },\n      /**\n       * just re-set the touchAction value\n       */\n      update: function() {\n        this.set(this.manager.options.touchAction);\n      },\n      /**\n       * compute the value for the touchAction property based on the recognizer's settings\n       * @returns {String} value\n       */\n      compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n          if (boolOrFn(recognizer.options.enable, [recognizer])) {\n            actions = actions.concat(recognizer.getTouchAction());\n          }\n        });\n        return cleanTouchActions(actions.join(\" \"));\n      },\n      /**\n       * this method is called on each input cycle and provides the preventing of the browser behavior\n       * @param {Object} input\n       */\n      preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n        if (this.manager.session.prevented) {\n          srcEvent.preventDefault();\n          return;\n        }\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n        if (hasNone) {\n          var isTapPointer = input.pointers.length === 1;\n          var isTapMovement = input.distance < 2;\n          var isTapTouchTime = input.deltaTime < 250;\n          if (isTapPointer && isTapMovement && isTapTouchTime) {\n            return;\n          }\n        }\n        if (hasPanX && hasPanY) {\n          return;\n        }\n        if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n          return this.preventSrc(srcEvent);\n        }\n      },\n      /**\n       * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n       * @param {Object} srcEvent\n       */\n      preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n      }\n    };\n    function cleanTouchActions(actions) {\n      if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n      }\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n      if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n      }\n      if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n      }\n      if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n      }\n      return TOUCH_ACTION_AUTO;\n    }\n    function getTouchActionProps() {\n      if (!NATIVE_TOUCH_ACTION) {\n        return false;\n      }\n      var touchMap = {};\n      var cssSupports = window2.CSS && window2.CSS.supports;\n      [\"auto\", \"manipulation\", \"pan-y\", \"pan-x\", \"pan-x pan-y\", \"none\"].forEach(function(val) {\n        touchMap[val] = cssSupports ? window2.CSS.supports(\"touch-action\", val) : true;\n      });\n      return touchMap;\n    }\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n    function Recognizer(options) {\n      this.options = assign({}, this.defaults, options || {});\n      this.id = uniqueId();\n      this.manager = null;\n      this.options.enable = ifUndefined(this.options.enable, true);\n      this.state = STATE_POSSIBLE;\n      this.simultaneous = {};\n      this.requireFail = [];\n    }\n    Recognizer.prototype = {\n      /**\n       * @virtual\n       * @type {Object}\n       */\n      defaults: {},\n      /**\n       * set options\n       * @param {Object} options\n       * @return {Recognizer}\n       */\n      set: function(options) {\n        assign(this.options, options);\n        this.manager && this.manager.touchAction.update();\n        return this;\n      },\n      /**\n       * recognize simultaneous with an other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, \"recognizeWith\", this)) {\n          return this;\n        }\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n          simultaneous[otherRecognizer.id] = otherRecognizer;\n          otherRecognizer.recognizeWith(this);\n        }\n        return this;\n      },\n      /**\n       * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, \"dropRecognizeWith\", this)) {\n          return this;\n        }\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n      },\n      /**\n       * recognizer can only run when an other is failing\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, \"requireFailure\", this)) {\n          return this;\n        }\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n          requireFail.push(otherRecognizer);\n          otherRecognizer.requireFailure(this);\n        }\n        return this;\n      },\n      /**\n       * drop the requireFailure link. it does not remove the link on the other recognizer.\n       * @param {Recognizer} otherRecognizer\n       * @returns {Recognizer} this\n       */\n      dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, \"dropRequireFailure\", this)) {\n          return this;\n        }\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n          this.requireFail.splice(index, 1);\n        }\n        return this;\n      },\n      /**\n       * has require failures boolean\n       * @returns {boolean}\n       */\n      hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n      },\n      /**\n       * if the recognizer can recognize simultaneous with an other recognizer\n       * @param {Recognizer} otherRecognizer\n       * @returns {Boolean}\n       */\n      canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n      },\n      /**\n       * You should use `tryEmit` instead of `emit` directly to check\n       * that all the needed recognizers has failed before emitting.\n       * @param {Object} input\n       */\n      emit: function(input) {\n        var self2 = this;\n        var state = this.state;\n        function emit(event) {\n          self2.manager.emit(event, input);\n        }\n        if (state < STATE_ENDED) {\n          emit(self2.options.event + stateStr(state));\n        }\n        emit(self2.options.event);\n        if (input.additionalEvent) {\n          emit(input.additionalEvent);\n        }\n        if (state >= STATE_ENDED) {\n          emit(self2.options.event + stateStr(state));\n        }\n      },\n      /**\n       * Check that all the require failure recognizers has failed,\n       * if true, it emits a gesture event,\n       * otherwise, setup the state to FAILED.\n       * @param {Object} input\n       */\n      tryEmit: function(input) {\n        if (this.canEmit()) {\n          return this.emit(input);\n        }\n        this.state = STATE_FAILED;\n      },\n      /**\n       * can we emit?\n       * @returns {boolean}\n       */\n      canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n          if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n            return false;\n          }\n          i++;\n        }\n        return true;\n      },\n      /**\n       * update the recognizer\n       * @param {Object} inputData\n       */\n      recognize: function(inputData) {\n        var inputDataClone = assign({}, inputData);\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n          this.reset();\n          this.state = STATE_FAILED;\n          return;\n        }\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n          this.state = STATE_POSSIBLE;\n        }\n        this.state = this.process(inputDataClone);\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n          this.tryEmit(inputDataClone);\n        }\n      },\n      /**\n       * return the state of the recognizer\n       * the actual recognizing happens in this method\n       * @virtual\n       * @param {Object} inputData\n       * @returns {Const} STATE\n       */\n      process: function(inputData) {\n      },\n      // jshint ignore:line\n      /**\n       * return the preferred touch-action\n       * @virtual\n       * @returns {Array}\n       */\n      getTouchAction: function() {\n      },\n      /**\n       * called when the gesture isn't allowed to recognize\n       * like when another is being recognized or it is disabled\n       * @virtual\n       */\n      reset: function() {\n      }\n    };\n    function stateStr(state) {\n      if (state & STATE_CANCELLED) {\n        return \"cancel\";\n      } else if (state & STATE_ENDED) {\n        return \"end\";\n      } else if (state & STATE_CHANGED) {\n        return \"move\";\n      } else if (state & STATE_BEGAN) {\n        return \"start\";\n      }\n      return \"\";\n    }\n    function directionStr(direction) {\n      if (direction == DIRECTION_DOWN) {\n        return \"down\";\n      } else if (direction == DIRECTION_UP) {\n        return \"up\";\n      } else if (direction == DIRECTION_LEFT) {\n        return \"left\";\n      } else if (direction == DIRECTION_RIGHT) {\n        return \"right\";\n      }\n      return \"\";\n    }\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n      var manager = recognizer.manager;\n      if (manager) {\n        return manager.get(otherRecognizer);\n      }\n      return otherRecognizer;\n    }\n    function AttrRecognizer() {\n      Recognizer.apply(this, arguments);\n    }\n    inherit(AttrRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof AttrRecognizer\n       */\n      defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n      },\n      /**\n       * Used to check if it the recognizer receives valid input, like input.distance > 10.\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {Boolean} recognized\n       */\n      attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n      },\n      /**\n       * Process the input and return the state for the recognizer\n       * @memberof AttrRecognizer\n       * @param {Object} input\n       * @returns {*} State\n       */\n      process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n          return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n          if (eventType & INPUT_END) {\n            return state | STATE_ENDED;\n          } else if (!(state & STATE_BEGAN)) {\n            return STATE_BEGAN;\n          }\n          return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n      }\n    });\n    function PanRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n      this.pX = null;\n      this.pY = null;\n    }\n    inherit(PanRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PanRecognizer\n       */\n      defaults: {\n        event: \"pan\",\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n      },\n      getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n          actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n          actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n      },\n      directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n        if (!(direction & options.direction)) {\n          if (options.direction & DIRECTION_HORIZONTAL) {\n            direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n            hasMoved = x != this.pX;\n            distance = Math.abs(input.deltaX);\n          } else {\n            direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n            hasMoved = y != this.pY;\n            distance = Math.abs(input.deltaY);\n          }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n      },\n      attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n      },\n      emit: function(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n        var direction = directionStr(input.direction);\n        if (direction) {\n          input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n      }\n    });\n    function PinchRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n    inherit(PinchRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n        event: \"pinch\",\n        threshold: 0,\n        pointers: 2\n      },\n      getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n      },\n      attrTest: function(input) {\n        return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n      },\n      emit: function(input) {\n        if (input.scale !== 1) {\n          var inOut = input.scale < 1 ? \"in\" : \"out\";\n          input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n      }\n    });\n    function PressRecognizer() {\n      Recognizer.apply(this, arguments);\n      this._timer = null;\n      this._input = null;\n    }\n    inherit(PressRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PressRecognizer\n       */\n      defaults: {\n        event: \"press\",\n        pointers: 1,\n        time: 251,\n        // minimal time of the pointer to be pressed\n        threshold: 9\n        // a minimal movement is ok, but keep it low\n      },\n      getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n      },\n      process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n        this._input = input;\n        if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n          this.reset();\n        } else if (input.eventType & INPUT_START) {\n          this.reset();\n          this._timer = setTimeoutContext(function() {\n            this.state = STATE_RECOGNIZED;\n            this.tryEmit();\n          }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n          return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n      },\n      reset: function() {\n        clearTimeout(this._timer);\n      },\n      emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n          return;\n        }\n        if (input && input.eventType & INPUT_END) {\n          this.manager.emit(this.options.event + \"up\", input);\n        } else {\n          this._input.timeStamp = now();\n          this.manager.emit(this.options.event, this._input);\n        }\n      }\n    });\n    function RotateRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n    inherit(RotateRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof RotateRecognizer\n       */\n      defaults: {\n        event: \"rotate\",\n        threshold: 0,\n        pointers: 2\n      },\n      getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n      },\n      attrTest: function(input) {\n        return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n      }\n    });\n    function SwipeRecognizer() {\n      AttrRecognizer.apply(this, arguments);\n    }\n    inherit(SwipeRecognizer, AttrRecognizer, {\n      /**\n       * @namespace\n       * @memberof SwipeRecognizer\n       */\n      defaults: {\n        event: \"swipe\",\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n      },\n      getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n      },\n      attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n          velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n          velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n          velocity = input.overallVelocityY;\n        }\n        return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n      },\n      emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n          this.manager.emit(this.options.event + direction, input);\n        }\n        this.manager.emit(this.options.event, input);\n      }\n    });\n    function TapRecognizer() {\n      Recognizer.apply(this, arguments);\n      this.pTime = false;\n      this.pCenter = false;\n      this._timer = null;\n      this._input = null;\n      this.count = 0;\n    }\n    inherit(TapRecognizer, Recognizer, {\n      /**\n       * @namespace\n       * @memberof PinchRecognizer\n       */\n      defaults: {\n        event: \"tap\",\n        pointers: 1,\n        taps: 1,\n        interval: 300,\n        // max time between the multi-tap taps\n        time: 250,\n        // max time of the pointer to be down (like finger on the screen)\n        threshold: 9,\n        // a minimal movement is ok, but keep it low\n        posThreshold: 10\n        // a multi-tap can be a bit off the initial position\n      },\n      getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n      },\n      process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n        this.reset();\n        if (input.eventType & INPUT_START && this.count === 0) {\n          return this.failTimeout();\n        }\n        if (validMovement && validTouchTime && validPointers) {\n          if (input.eventType != INPUT_END) {\n            return this.failTimeout();\n          }\n          var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n          var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n          this.pTime = input.timeStamp;\n          this.pCenter = input.center;\n          if (!validMultiTap || !validInterval) {\n            this.count = 1;\n          } else {\n            this.count += 1;\n          }\n          this._input = input;\n          var tapCount = this.count % options.taps;\n          if (tapCount === 0) {\n            if (!this.hasRequireFailures()) {\n              return STATE_RECOGNIZED;\n            } else {\n              this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n              }, options.interval, this);\n              return STATE_BEGAN;\n            }\n          }\n        }\n        return STATE_FAILED;\n      },\n      failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n          this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n      },\n      reset: function() {\n        clearTimeout(this._timer);\n      },\n      emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n          this._input.tapCount = this.count;\n          this.manager.emit(this.options.event, this._input);\n        }\n      }\n    });\n    function Hammer(element, options) {\n      options = options || {};\n      options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n      return new Manager(element, options);\n    }\n    Hammer.VERSION = \"2.0.7\";\n    Hammer.defaults = {\n      /**\n       * set if DOM events are being triggered.\n       * But this is slower and unused by simple implementations, so disabled by default.\n       * @type {Boolean}\n       * @default false\n       */\n      domEvents: false,\n      /**\n       * The value for the touchAction property/fallback.\n       * When set to `compute` it will magically set the correct value based on the added recognizers.\n       * @type {String}\n       * @default compute\n       */\n      touchAction: TOUCH_ACTION_COMPUTE,\n      /**\n       * @type {Boolean}\n       * @default true\n       */\n      enable: true,\n      /**\n       * EXPERIMENTAL FEATURE -- can be removed/changed\n       * Change the parent input target element.\n       * If Null, then it is being set the to main element.\n       * @type {Null|EventTarget}\n       * @default null\n       */\n      inputTarget: null,\n      /**\n       * force an input class\n       * @type {Null|Function}\n       * @default null\n       */\n      inputClass: null,\n      /**\n       * Default recognizer setup when calling `Hammer()`\n       * When creating a new Manager these will be skipped.\n       * @type {Array}\n       */\n      preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, { enable: false }],\n        [PinchRecognizer, { enable: false }, [\"rotate\"]],\n        [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }],\n        [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, [\"swipe\"]],\n        [TapRecognizer],\n        [TapRecognizer, { event: \"doubletap\", taps: 2 }, [\"tap\"]],\n        [PressRecognizer]\n      ],\n      /**\n       * Some CSS properties can be used to improve the working of Hammer.\n       * Add them to this method and they will be set when creating a new Manager.\n       * @namespace\n       */\n      cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: \"none\",\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: \"none\",\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: \"none\",\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: \"none\",\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: \"none\",\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: \"rgba(0,0,0,0)\"\n      }\n    };\n    var STOP = 1;\n    var FORCED_STOP = 2;\n    function Manager(element, options) {\n      this.options = assign({}, Hammer.defaults, options || {});\n      this.options.inputTarget = this.options.inputTarget || element;\n      this.handlers = {};\n      this.session = {};\n      this.recognizers = [];\n      this.oldCssProps = {};\n      this.element = element;\n      this.input = createInputInstance(this);\n      this.touchAction = new TouchAction(this, this.options.touchAction);\n      toggleCssProps(this, true);\n      each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new item[0](item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n      }, this);\n    }\n    Manager.prototype = {\n      /**\n       * set options\n       * @param {Object} options\n       * @returns {Manager}\n       */\n      set: function(options) {\n        assign(this.options, options);\n        if (options.touchAction) {\n          this.touchAction.update();\n        }\n        if (options.inputTarget) {\n          this.input.destroy();\n          this.input.target = options.inputTarget;\n          this.input.init();\n        }\n        return this;\n      },\n      /**\n       * stop recognizing for this session.\n       * This session will be discarded, when a new [input]start event is fired.\n       * When forced, the recognizer cycle is stopped immediately.\n       * @param {Boolean} [force]\n       */\n      stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n      },\n      /**\n       * run the recognizers!\n       * called by the inputHandler function on every movement of the pointers (touches)\n       * it walks through all the recognizers and tries to detect the gesture that is being made\n       * @param {Object} inputData\n       */\n      recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n          return;\n        }\n        this.touchAction.preventDefaults(inputData);\n        var recognizer;\n        var recognizers = this.recognizers;\n        var curRecognizer = session.curRecognizer;\n        if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n          curRecognizer = session.curRecognizer = null;\n        }\n        var i = 0;\n        while (i < recognizers.length) {\n          recognizer = recognizers[i];\n          if (session.stopped !== FORCED_STOP && // 1\n          (!curRecognizer || recognizer == curRecognizer || // 2\n          recognizer.canRecognizeWith(curRecognizer))) {\n            recognizer.recognize(inputData);\n          } else {\n            recognizer.reset();\n          }\n          if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n            curRecognizer = session.curRecognizer = recognizer;\n          }\n          i++;\n        }\n      },\n      /**\n       * get a recognizer by its event name.\n       * @param {Recognizer|String} recognizer\n       * @returns {Recognizer|Null}\n       */\n      get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n          return recognizer;\n        }\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n          if (recognizers[i].options.event == recognizer) {\n            return recognizers[i];\n          }\n        }\n        return null;\n      },\n      /**\n       * add a recognizer to the manager\n       * existing recognizers with the same event name will be removed\n       * @param {Recognizer} recognizer\n       * @returns {Recognizer|Manager}\n       */\n      add: function(recognizer) {\n        if (invokeArrayArg(recognizer, \"add\", this)) {\n          return this;\n        }\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n          this.remove(existing);\n        }\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n        this.touchAction.update();\n        return recognizer;\n      },\n      /**\n       * remove a recognizer by name or instance\n       * @param {Recognizer|String} recognizer\n       * @returns {Manager}\n       */\n      remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, \"remove\", this)) {\n          return this;\n        }\n        recognizer = this.get(recognizer);\n        if (recognizer) {\n          var recognizers = this.recognizers;\n          var index = inArray(recognizers, recognizer);\n          if (index !== -1) {\n            recognizers.splice(index, 1);\n            this.touchAction.update();\n          }\n        }\n        return this;\n      },\n      /**\n       * bind event\n       * @param {String} events\n       * @param {Function} handler\n       * @returns {EventEmitter} this\n       */\n      on: function(events, handler) {\n        if (events === undefined$1) {\n          return;\n        }\n        if (handler === undefined$1) {\n          return;\n        }\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n          handlers[event] = handlers[event] || [];\n          handlers[event].push(handler);\n        });\n        return this;\n      },\n      /**\n       * unbind event, leave emit blank to remove all handlers\n       * @param {String} events\n       * @param {Function} [handler]\n       * @returns {EventEmitter} this\n       */\n      off: function(events, handler) {\n        if (events === undefined$1) {\n          return;\n        }\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n          if (!handler) {\n            delete handlers[event];\n          } else {\n            handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n          }\n        });\n        return this;\n      },\n      /**\n       * emit event to the listeners\n       * @param {String} event\n       * @param {Object} data\n       */\n      emit: function(event, data) {\n        if (this.options.domEvents) {\n          triggerDomEvent(event, data);\n        }\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n          return;\n        }\n        data.type = event;\n        data.preventDefault = function() {\n          data.srcEvent.preventDefault();\n        };\n        var i = 0;\n        while (i < handlers.length) {\n          handlers[i](data);\n          i++;\n        }\n      },\n      /**\n       * destroy the manager and unbinds all events\n       * it doesn't unbind dom events, that is the user own responsibility\n       */\n      destroy: function() {\n        this.element && toggleCssProps(this, false);\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n      }\n    };\n    function toggleCssProps(manager, add) {\n      var element = manager.element;\n      if (!element.style) {\n        return;\n      }\n      var prop;\n      each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n          manager.oldCssProps[prop] = element.style[prop];\n          element.style[prop] = value;\n        } else {\n          element.style[prop] = manager.oldCssProps[prop] || \"\";\n        }\n      });\n      if (!add) {\n        manager.oldCssProps = {};\n      }\n    }\n    function triggerDomEvent(event, data) {\n      var gestureEvent = document2.createEvent(\"Event\");\n      gestureEvent.initEvent(event, true, true);\n      gestureEvent.gesture = data;\n      data.target.dispatchEvent(gestureEvent);\n    }\n    assign(Hammer, {\n      INPUT_START,\n      INPUT_MOVE,\n      INPUT_END,\n      INPUT_CANCEL,\n      STATE_POSSIBLE,\n      STATE_BEGAN,\n      STATE_CHANGED,\n      STATE_ENDED,\n      STATE_RECOGNIZED,\n      STATE_CANCELLED,\n      STATE_FAILED,\n      DIRECTION_NONE,\n      DIRECTION_LEFT,\n      DIRECTION_RIGHT,\n      DIRECTION_UP,\n      DIRECTION_DOWN,\n      DIRECTION_HORIZONTAL,\n      DIRECTION_VERTICAL,\n      DIRECTION_ALL,\n      Manager,\n      Input,\n      TouchAction,\n      TouchInput,\n      MouseInput,\n      PointerEventInput,\n      TouchMouseInput,\n      SingleTouchInput,\n      Recognizer,\n      AttrRecognizer,\n      Tap: TapRecognizer,\n      Pan: PanRecognizer,\n      Swipe: SwipeRecognizer,\n      Pinch: PinchRecognizer,\n      Rotate: RotateRecognizer,\n      Press: PressRecognizer,\n      on: addEventListeners,\n      off: removeEventListeners,\n      each,\n      merge,\n      extend,\n      assign,\n      inherit,\n      bindFn,\n      prefixed\n    });\n    var freeGlobal = typeof window2 !== \"undefined\" ? window2 : typeof self !== \"undefined\" ? self : {};\n    freeGlobal.Hammer = Hammer;\n    if (typeof undefined$1 === \"function\" && undefined$1.amd) {\n      undefined$1(function() {\n        return Hammer;\n      });\n    } else if (module.exports) {\n      module.exports = Hammer;\n    } else {\n      window2[exportName] = Hammer;\n    }\n  })(window, document, \"Hammer\");\n})(hammer$2);\nvar hammerExports = hammer$2.exports;\nconst hammer = /* @__PURE__ */ getDefaultExportFromCjs(hammerExports);\nconst hammer$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  default: hammer\n}, [hammerExports]);\nexport {\n  hammer$1 as h\n};\n"],
  "mappings": "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",
  "names": []
}
